project_name: miku
release:
  github:
    owner: NinoDiscord
    name: miku
  name_template: '{{.Tag}}'
scoop:
  name: miku
  commit_author:
    name: goreleaserbot
    email: goreleaser@carlosbecker.com
  commit_msg_template: Scoop update for {{ .ProjectName }} version {{ .Tag }}
builds:
- id: miku
  goos:
  - linux
  - darwin
  - windows
  goarch:
  - amd64
  - arm64
  - "386"
  - arm
  goarm:
  - "6"
  - "7"
  gomips:
  - hardfloat
  targets:
  - linux_amd64
  - linux_arm64
  - linux_386
  - linux_arm_6
  - linux_arm_7
  - darwin_amd64
  - darwin_arm64
  - windows_amd64
  - windows_386
  - windows_arm_6
  - windows_arm_7
  ignore:
  - goos: windows
    goarch: arm64
  - goarch: "6"
  - goarch: "7"
  dir: .
  main: .
  ldflags:
  - -s -w -X main.version={{ .Version }} -X main.commitSHA={{ .ShortCommit }} -X main.buildDate={{
    .Date }}
  binary: miku
  builder: go
  gobinary: go
archives:
- id: default
  builds:
  - tsubaki
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm
    }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}'
  replacements:
    "386": i386
    amd64: x86_64
    darwin: Darwin
    windows: Windows
  format: tar.gz
  format_overrides:
  - goos: windows
    format: zip
  files:
  - src: license*
  - src: LICENSE*
  - src: readme*
  - src: README*
  - src: changelog*
  - src: CHANGELOG*
snapshot:
  name_template: '{{ incpatch .Version }}-SNAPSHOT'
checksum:
  name_template: checksums.txt
  algorithm: sha256
dockers:
- ids:
  - miku
  goos: linux
  goarch: amd64
  dockerfile: Dockerfile
  image_templates:
  - noelware/miku:latest-amd64
  - noelware/miku:{{ .Version }}-amd64
  - noelware/miku:{{ .Major }}.{{ .Minor }}-amd64
  - ghcr.io/ninodiscord/miku:latest
  - ghcr.io/ninodiscord/miku:latest-amd64
  - ghcr.io/ninodiscord/miku:{{ .Version }}-amd64
  - ghcr.io/ninodiscord/miku:{{ .Major }}.{{ .Minor }}-amd64
  build_flag_templates:
  - --platform=linux/amd64
  - --label=org.opencontainers.image.title={{ .ProjectName }}
  - --label=org.opencontainers.image.description="Tiny, stateless microservice to
    notify that your Discord bot is going under maintenance, made in Go"
  - --label=org.opencontainers.image.url=https://arisu.land
  - --label=org.opencontainers.image.source=https://github.com/NinoDiscord/miku
  - --label=org.opencontainers.image.version={{ .Version }}
  - --label=org.opencontainers.image.created={{ .Date }}
  - --label=org.opencontainers.image.revision={{ .FullCommit }}
  - --label=org.opencontainers.image.licenses=MIT
  use: docker
- ids:
  - miku
  goos: linux
  goarch: arm64
  dockerfile: Dockerfile
  image_templates:
  - noelware/miku:latest-arm64
  - noelware/miku:{{ .Version }}-arm64
  - noelware/miku:{{ .Major }}.{{ .Minor }}-arm64
  - ghcr.io/ninodiscord/miku:latest-arm64
  - ghcr.io/ninodiscord/miku:{{ .Version }}-arm64
  - ghcr.io/ninodiscord/miku:{{ .Major }}.{{ .Minor }}-arm64
  build_flag_templates:
  - --platform=linux/arm64
  - --label=org.opencontainers.image.title={{ .ProjectName }}
  - --label=org.opencontainers.image.description="Tiny, stateless microservice to
    notify that your Discord bot is going under maintenance, made in Go"
  - --label=org.opencontainers.image.url=https://arisu.land
  - --label=org.opencontainers.image.source=https://github.com/ninodiscord/miku
  - --label=org.opencontainers.image.version={{ .Version }}
  - --label=org.opencontainers.image.created={{ .Date }}
  - --label=org.opencontainers.image.revision={{ .FullCommit }}
  - --label=org.opencontainers.image.licenses=MIT
  use: docker
- ids:
  - miku
  goos: linux
  goarch: arm
  goarm: "7"
  dockerfile: Dockerfile
  image_templates:
  - noelware/miku:latest-armv7
  - noelware/miku:{{ .Version }}-armv7
  - noelware/miku:{{ .Major }}.{{ .Minor }}-armv7
  - ghcr.io/ninodiscord/miku:latest-armv7
  - ghcr.io/ninodiscord/miku:{{ .Version }}-armv7
  - ghcr.io/ninodiscord/miku:{{ .Major }}.{{ .Minor }}-armv7
  build_flag_templates:
  - --platform=linux/arm/v7
  - --label=org.opencontainers.image.title={{ .ProjectName }}
  - --label=org.opencontainers.image.description="Tiny, stateless microservice to
    notify that your Discord bot is going under maintenance, made in Go"
  - --label=org.opencontainers.image.url=https://arisu.land
  - --label=org.opencontainers.image.source=https://github.com/ninodiscord/miku
  - --label=org.opencontainers.image.version={{ .Version }}
  - --label=org.opencontainers.image.created={{ .Date }}
  - --label=org.opencontainers.image.revision={{ .FullCommit }}
  - --label=org.opencontainers.image.licenses=MIT
  use: docker
docker_manifests:
- name_template: noelware/miku:{{ .Version }}
  image_templates:
  - noelware/miku:{{ .Version }}-amd64
  - noelware/miku:{{ .Version }}-arm64
  - noelware/miku:{{ .Version }}-armv7
  use: docker
- name_template: ghcr.io/ninodiscord/miku:{{ .Version }}
  image_templates:
  - ghcr.io/ninodiscord/miku:{{ .Version }}-amd64
  - ghcr.io/ninodiscord/miku:{{ .Version }}-arm64
  - ghcr.io/ninodiscord/miku:{{ .Version }}-armv7
  use: docker
- name_template: noelware/miku:{{ .Major }}.{{ .Minor }}
  image_templates:
  - noelware/miku:{{ .Major }}.{{ .Minor }}-amd64
  - noelware/miku:{{ .Major }}.{{ .Minor }}-arm64
  - noelware/miku:{{ .Major }}.{{ .Minor }}-armv7
  use: docker
- name_template: ghcr.io/ninodiscord/miku:{{ .Major }}.{{ .Minor }}
  image_templates:
  - ghcr.io/ninodiscord/miku:{{ .Major }}.{{ .Minor }}-amd64
  - ghcr.io/ninodiscord/miku:{{ .Major }}.{{ .Minor }}-arm64
  - ghcr.io/ninodiscord/miku:{{ .Major }}.{{ .Minor }}-armv7
  use: docker
- name_template: noelware/miku:latest
  image_templates:
  - noelware/miku:latest-amd64
  - noelware/miku:latest-arm64
  - noelware/miku:latest-armv7
  use: docker
- name_template: ghcr.io/ninodiscord/miku:latest
  image_templates:
  - ghcr.io/ninodiscord/miku:latest-amd64
  - ghcr.io/ninodiscord/miku:latest-arm64
  - ghcr.io/ninodiscord/miku:latest-armv7
  use: docker
changelog:
  filters:
    exclude:
    - '^docs:'
    - '^test:'
  sort: asc
dist: dist
signs:
- id: default
  cmd: gpg
  args:
  - --output
  - $signature
  - --detach-sig
  - $artifact
  signature: ${artifact}.sig
  artifacts: checksum
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
  - go mod tidy
  - go mod download
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL
      }}'
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL
      }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL
      }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL
      }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL
      }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL
      }}'
  telegram:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL
      }}'
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it
      out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
